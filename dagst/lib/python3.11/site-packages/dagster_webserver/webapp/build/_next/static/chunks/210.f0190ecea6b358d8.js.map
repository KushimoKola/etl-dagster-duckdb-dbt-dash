{"version":3,"file":"static/chunks/210.f0190ecea6b358d8.js","mappings":"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","sources":["webpack://_N_E/../ui-components/src/components/Page.tsx","webpack://_N_E/../ui-components/src/components/PageHeader.tsx","webpack://_N_E/../ui-core/src/assets/globalAssetGraphPathToString.tsx","webpack://_N_E/../ui-core/src/hooks/useSelectionReducer.ts","webpack://_N_E/../ui-core/src/runs/AssetTagCollections.tsx","webpack://_N_E/../ui-core/src/runs/DeletionDialog.tsx","webpack://_N_E/../ui-components/src/components/ProductTour.tsx","webpack://_N_E/../ui-core/src/runs/ReexecutionDialog.tsx","webpack://_N_E/../ui-core/src/runs/RunActionsMenu.tsx","webpack://_N_E/../ui-core/src/runs/RunCreatedByCell.tsx","webpack://_N_E/../ui-core/src/runs/ShowAndHideRunTags.mp4","webpack://_N_E/../ui-core/src/runs/RunTable.tsx","webpack://_N_E/../ui-core/src/runs/RunTags.tsx","webpack://_N_E/../ui-core/src/ui/AnchorButton.tsx","webpack://_N_E/../ui-core/src/ui/MenuLink.tsx","webpack://_N_E/../ui-core/src/ui/VirtualizedItemListForDialog.tsx","webpack://_N_E/<anon>"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Page = styled.div`\n  height: 100%;\n  overflow-y: auto;\n  padding-bottom: 64px;\n  width: 100%;\n`;\n","import * as React from 'react';\nimport styled from 'styled-components';\n\nimport {Box} from './Box';\nimport {Colors} from './Colors';\nimport {IconName} from './Icon';\n\ninterface Props {\n  title: React.ReactNode;\n  tags?: React.ReactNode;\n  icon?: IconName;\n  description?: React.ReactNode;\n  metadata?: React.ReactNode;\n  right?: React.ReactNode;\n  tabs?: React.ReactNode;\n}\n\nexport const PageHeader = (props: Props) => {\n  const {title, tags, right, tabs} = props;\n  return (\n    <PageHeaderContainer\n      background={Colors.Gray50}\n      padding={{top: 16, left: 24, right: 12}}\n      border=\"bottom\"\n    >\n      <Box flex={{direction: 'row', justifyContent: 'space-between'}} padding={{bottom: 16}}>\n        <Box flex={{direction: 'row', alignItems: 'flex-start', gap: 12, wrap: 'wrap'}}>\n          {title}\n          {tags}\n        </Box>\n        {right}\n      </Box>\n      {tabs}\n    </PageHeaderContainer>\n  );\n};\n\nconst PageHeaderContainer = styled(Box)`\n  width: 100%;\n\n  /**\n   * Blueprint breadcrumbs annoyingly have a built-in height.\n   */\n  .bp4-breadcrumbs {\n    height: auto;\n  }\n`;\n","import {tokenForAssetKey} from '../asset-graph/Utils';\nimport {AssetKeyInput} from '../graphql/types';\nimport {\n  ExplorerPath,\n  explorerPathFromString,\n  explorerPathToString,\n} from '../pipelines/PipelinePathUtils';\n\n// https://stackoverflow.com/questions/417142/what-is-the-maximum-length-of-a-url-in-different-browsers\nconst URL_MAX_LENGTH = 32000;\nconst __GLOBAL__ = '__GLOBAL__';\n\nexport function globalAssetGraphPathToString(path: Omit<ExplorerPath, 'pipelineName'>) {\n  const str = explorerPathToString({...path, pipelineName: __GLOBAL__}).replace(__GLOBAL__, '');\n  return `/asset-groups${str}`;\n}\n\nexport function globalAssetGraphPathFromString(pathName: string) {\n  return explorerPathFromString(__GLOBAL__ + pathName || '/');\n}\n\nexport function globalAssetGraphPathForAssetsAndDescendants(assetKeys: AssetKeyInput[]) {\n  // In a perfect world we populate ops query to \"asset1*,asset2*\" and then select the roots\n  // by passing opNames. If we don't have enough characters to do both, just populate the ops\n  // query. It might still be too long, but we tried.\n  const opsQuery = assetKeys.map((a) => `${tokenForAssetKey(a)}*`).join(', ');\n  const opNames =\n    opsQuery.length > URL_MAX_LENGTH / 2 ? [] : [assetKeys.map(tokenForAssetKey).join(',')];\n  return globalAssetGraphPathToString({opNames, opsQuery});\n}\n","import React from 'react';\n\ntype State = {\n  checkedIds: Set<string>;\n  lastCheckedId: string | null;\n};\n\ntype Action =\n  | {type: 'toggle-one'; payload: {checked: boolean; id: string}}\n  | {\n      type: 'toggle-slice';\n      payload: {checked: boolean; id: string; allIds: string[]};\n    }\n  | {type: 'toggle-all'; payload: {checked: boolean; allIds: string[]}};\n\nconst reducer = (state: State, action: Action): State => {\n  const copy = new Set(Array.from(state.checkedIds));\n  switch (action.type) {\n    case 'toggle-one': {\n      const {checked, id} = action.payload;\n      checked ? copy.add(id) : copy.delete(id);\n      return {lastCheckedId: id, checkedIds: copy};\n    }\n\n    case 'toggle-slice': {\n      const {checked, id, allIds} = action.payload;\n      const {lastCheckedId} = state;\n\n      const indexOfLast = lastCheckedId ? allIds.indexOf(lastCheckedId) : -1;\n      const indexOfChecked = allIds.indexOf(id);\n      if (indexOfLast === -1 || indexOfChecked === -1) {\n        return state;\n      }\n\n      const [start, end] = [indexOfLast, indexOfChecked].sort();\n      allIds.slice(start, end! + 1).forEach((id) => {\n        checked ? copy.add(id) : copy.delete(id);\n      });\n\n      return {\n        lastCheckedId: id,\n        checkedIds: copy,\n      };\n    }\n\n    case 'toggle-all': {\n      const {checked, allIds} = action.payload;\n      return {\n        lastCheckedId: null,\n        checkedIds: checked ? new Set(allIds) : new Set(),\n      };\n    }\n  }\n};\n\nconst initialState: State = {\n  checkedIds: new Set(),\n  lastCheckedId: null,\n};\n\nexport function useSelectionReducer(allIds: string[]) {\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n\n  const onToggleFactory = (id: string) => (values: {checked: boolean; shiftKey: boolean}) => {\n    const {checked, shiftKey} = values;\n    if (shiftKey && state.lastCheckedId) {\n      dispatch({type: 'toggle-slice', payload: {checked, id, allIds}});\n    } else {\n      dispatch({type: 'toggle-one', payload: {checked, id}});\n    }\n  };\n\n  const onToggleAll = (checked: boolean) => {\n    dispatch({type: 'toggle-all', payload: {checked, allIds}});\n  };\n\n  return [state, {onToggleFactory, onToggleAll}] as const;\n}\n","import {\n  Box,\n  Button,\n  ButtonLink,\n  Colors,\n  Dialog,\n  DialogFooter,\n  Icon,\n  Tag,\n} from '@dagster-io/ui-components';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\n\nimport {displayNameForAssetKey} from '../asset-graph/Utils';\nimport {\n  assetDetailsPathForAssetCheck,\n  assetDetailsPathForKey,\n} from '../assets/assetDetailsPathForKey';\nimport {globalAssetGraphPathForAssetsAndDescendants} from '../assets/globalAssetGraphPathToString';\nimport {AssetKey} from '../assets/types';\nimport {TagActionsPopover} from '../ui/TagActions';\nimport {VirtualizedItemListForDialog} from '../ui/VirtualizedItemListForDialog';\n\nconst renderItemAssetKey = (assetKey: AssetKey) => (\n  <Link to={assetDetailsPathForKey(assetKey)}>{displayNameForAssetKey(assetKey)}</Link>\n);\n\nconst renderItemAssetCheck = (assetCheck: Check) => (\n  <Link to={assetDetailsPathForAssetCheck(assetCheck)}>{labelForAssetCheck(assetCheck)}</Link>\n);\n\nconst labelForAssetCheck = (check: Check) => {\n  return `${check.name} on ${displayNameForAssetKey(check.assetKey)}`;\n};\n\nfunction useShowMoreDialog<T>(\n  modalTitle: string,\n  items: T[] | null,\n  renderItem: (item: T) => React.ReactNode,\n) {\n  const [showMore, setShowMore] = React.useState(false);\n\n  const dialog =\n    !!items && items.length > 1 ? (\n      <Dialog\n        title={modalTitle}\n        onClose={() => setShowMore(false)}\n        style={{minWidth: '400px', maxWidth: '80vw', maxHeight: '70vh'}}\n        isOpen={showMore}\n      >\n        <div style={{height: '340px', overflow: 'hidden'}}>\n          <VirtualizedItemListForDialog items={items} renderItem={renderItem} />\n        </div>\n        <DialogFooter topBorder>\n          <Button autoFocus onClick={() => setShowMore(false)}>\n            Done\n          </Button>\n        </DialogFooter>\n      </Dialog>\n    ) : undefined;\n\n  return {dialog, showMore, setShowMore};\n}\n\nexport const AssetKeyTagCollection: React.FC<{\n  assetKeys: AssetKey[] | null;\n  modalTitle?: string;\n  useTags?: boolean;\n}> = React.memo(({assetKeys, useTags, modalTitle = 'Assets in run'}) => {\n  const {setShowMore, dialog} = useShowMoreDialog(modalTitle, assetKeys, renderItemAssetKey);\n\n  if (!assetKeys || !assetKeys.length) {\n    return null;\n  }\n\n  if (assetKeys.length === 1) {\n    // Outer span ensures the popover target is in the right place if the\n    // parent is a flexbox.\n    const assetKey = assetKeys[0]!;\n    return (\n      <span style={useTags ? {} : {marginBottom: -4}}>\n        <TagActionsPopover\n          data={{key: '', value: ''}}\n          actions={[\n            {\n              label: 'View asset',\n              to: assetDetailsPathForKey(assetKey),\n            },\n            {\n              label: 'View downstream lineage',\n              to: assetDetailsPathForKey(assetKey, {\n                view: 'lineage',\n                lineageScope: 'downstream',\n              }),\n            },\n          ]}\n        >\n          {useTags ? (\n            <Tag intent=\"none\" interactive icon=\"asset\">\n              {displayNameForAssetKey(assetKey)}\n            </Tag>\n          ) : (\n            <Link to={assetDetailsPathForKey(assetKey)}>\n              <Box flex={{direction: 'row', gap: 8, alignItems: 'center'}}>\n                <Icon color={Colors.Gray400} name=\"asset\" size={16} />\n                {displayNameForAssetKey(assetKey)}\n              </Box>\n            </Link>\n          )}\n        </TagActionsPopover>\n      </span>\n    );\n  }\n\n  return (\n    <span style={useTags ? {} : {marginBottom: -4}}>\n      <TagActionsPopover\n        data={{key: '', value: ''}}\n        actions={[\n          {\n            label: 'View list',\n            onClick: () => setShowMore(true),\n          },\n          {\n            label: 'View downstream lineage',\n            to: globalAssetGraphPathForAssetsAndDescendants(assetKeys),\n          },\n        ]}\n      >\n        {useTags ? (\n          <Tag intent=\"none\" icon=\"asset\">\n            {assetKeys.length} assets\n          </Tag>\n        ) : (\n          <ButtonLink onClick={() => setShowMore(true)}>\n            <Box flex={{direction: 'row', gap: 8, alignItems: 'center', display: 'inline-flex'}}>\n              <Icon color={Colors.Gray400} name=\"asset\" size={16} />\n              <Box style={{flex: 1}} flex={{wrap: 'wrap', display: 'inline-flex'}}>\n                {`${assetKeys.length} assets`}\n              </Box>\n            </Box>\n          </ButtonLink>\n        )}\n      </TagActionsPopover>\n      {dialog}\n    </span>\n  );\n});\n\ntype Check = {name: string; assetKey: AssetKey};\n\nexport const AssetCheckTagCollection: React.FC<{\n  assetChecks: Check[] | null;\n  modalTitle?: string;\n  useTags?: boolean;\n}> = React.memo(({assetChecks, useTags, modalTitle = 'Asset checks in run'}) => {\n  const {setShowMore, dialog} = useShowMoreDialog(modalTitle, assetChecks, renderItemAssetCheck);\n\n  if (!assetChecks || !assetChecks.length) {\n    return null;\n  }\n\n  if (assetChecks.length === 1) {\n    // Outer span ensures the popover target is in the right place if the\n    // parent is a flexbox.\n    const check = assetChecks[0]!;\n    return (\n      <span style={useTags ? {} : {marginBottom: -4}}>\n        <TagActionsPopover\n          data={{key: '', value: ''}}\n          actions={[{label: 'View asset check', to: assetDetailsPathForAssetCheck(check)}]}\n        >\n          {useTags ? (\n            <Tag intent=\"none\" interactive icon=\"asset_check\">\n              {labelForAssetCheck(check)}\n            </Tag>\n          ) : (\n            <Link to={assetDetailsPathForAssetCheck(check)}>\n              <Box flex={{direction: 'row', gap: 8, alignItems: 'center'}}>\n                <Icon color={Colors.Gray400} name=\"asset_check\" size={16} />\n                {labelForAssetCheck(check)}\n              </Box>\n            </Link>\n          )}\n        </TagActionsPopover>\n      </span>\n    );\n  }\n\n  return (\n    <span style={useTags ? {} : {marginBottom: -4}}>\n      <TagActionsPopover\n        data={{key: '', value: ''}}\n        actions={[\n          {\n            label: 'View list',\n            onClick: () => setShowMore(true),\n          },\n        ]}\n      >\n        {useTags ? (\n          <Tag intent=\"none\" icon=\"asset_check\">\n            {assetChecks.length} asset checks\n          </Tag>\n        ) : (\n          <ButtonLink onClick={() => setShowMore(true)}>\n            <Box flex={{direction: 'row', gap: 8, alignItems: 'center', display: 'inline-flex'}}>\n              <Icon color={Colors.Gray400} name=\"asset_check\" size={16} />\n              <Box style={{flex: 1}} flex={{wrap: 'wrap', display: 'inline-flex'}}>\n                {`${assetChecks.length} asset checks`}\n              </Box>\n            </Box>\n          </ButtonLink>\n        )}\n      </TagActionsPopover>\n      {dialog}\n    </span>\n  );\n});\n","import {useMutation} from '@apollo/client';\n// eslint-disable-next-line no-restricted-imports\nimport {ProgressBar} from '@blueprintjs/core';\nimport {\n  Button,\n  Colors,\n  DialogBody,\n  DialogFooter,\n  Dialog,\n  Group,\n  Icon,\n  Mono,\n} from '@dagster-io/ui-components';\nimport * as React from 'react';\n\nimport {NavigationBlock} from './NavigationBlock';\nimport {DELETE_MUTATION} from './RunUtils';\nimport {DeleteMutation, DeleteMutationVariables} from './types/RunUtils.types';\n\nexport interface Props {\n  isOpen: boolean;\n  onClose: () => void;\n  onComplete: () => void;\n  onTerminateInstead: () => void;\n  selectedRuns: SelectedRuns;\n}\n\ntype SelectedRuns = {[id: string]: boolean};\n\nconst refineToError = (data: DeleteMutation | null | undefined) => {\n  if (data?.deletePipelineRun.__typename === 'DeletePipelineRunSuccess') {\n    throw new Error('Not an error!');\n  }\n  return data?.deletePipelineRun;\n};\n\ntype Error = ReturnType<typeof refineToError>;\n\ntype DeletionDialogState = {\n  step: 'initial' | 'deleting' | 'completed';\n  frozenRuns: SelectedRuns;\n  deletion: {completed: number; errors: {[id: string]: Error}};\n};\n\ntype DeletionDialogAction =\n  | {type: 'reset'; frozenRuns: SelectedRuns}\n  | {type: 'start'}\n  | {type: 'deletion-success'}\n  | {type: 'deletion-error'; id: string; error: Error}\n  | {type: 'complete'};\n\nconst initializeState = (frozenRuns: SelectedRuns): DeletionDialogState => {\n  return {\n    step: 'initial',\n    frozenRuns,\n    deletion: {completed: 0, errors: {}},\n  };\n};\n\nconst deletionDialogReducer = (\n  prevState: DeletionDialogState,\n  action: DeletionDialogAction,\n): DeletionDialogState => {\n  switch (action.type) {\n    case 'reset':\n      return initializeState(action.frozenRuns);\n    case 'start':\n      return {...prevState, step: 'deleting'};\n    case 'deletion-success': {\n      const {deletion} = prevState;\n      return {\n        ...prevState,\n        step: 'deleting',\n        deletion: {...deletion, completed: deletion.completed + 1},\n      };\n    }\n    case 'deletion-error': {\n      const {deletion} = prevState;\n      return {\n        ...prevState,\n        step: 'deleting',\n        deletion: {\n          ...deletion,\n          completed: deletion.completed + 1,\n          errors: {...deletion.errors, [action.id]: action.error},\n        },\n      };\n    }\n    case 'complete':\n      return {...prevState, step: 'completed'};\n  }\n};\n\nexport const DeletionDialog = (props: Props) => {\n  const {isOpen, onClose, onComplete, onTerminateInstead, selectedRuns} = props;\n  const frozenRuns = React.useRef<SelectedRuns>(selectedRuns);\n\n  const [state, dispatch] = React.useReducer(\n    deletionDialogReducer,\n    frozenRuns.current,\n    initializeState,\n  );\n\n  const runIDs = Object.keys(state.frozenRuns);\n  const count = runIDs.length;\n  const terminatableCount = runIDs.filter((id) => state.frozenRuns[id]).length;\n\n  // If the dialog is newly open, update state to match the frozen list.\n  React.useEffect(() => {\n    if (isOpen) {\n      dispatch({type: 'reset', frozenRuns: frozenRuns.current});\n    }\n  }, [isOpen]);\n\n  // If the dialog is not open, update the ref so that the frozen list will be entered\n  // into state the next time the dialog opens.\n  React.useEffect(() => {\n    if (!isOpen) {\n      frozenRuns.current = selectedRuns;\n    }\n  }, [isOpen, selectedRuns]);\n\n  const [destroy] = useMutation<DeleteMutation, DeleteMutationVariables>(DELETE_MUTATION);\n\n  const mutate = async () => {\n    dispatch({type: 'start'});\n\n    const runList = Object.keys(state.frozenRuns);\n    for (const runId of runList) {\n      const {data} = await destroy({variables: {runId}});\n\n      if (data?.deletePipelineRun.__typename === 'DeletePipelineRunSuccess') {\n        dispatch({type: 'deletion-success'});\n      } else {\n        dispatch({type: 'deletion-error', id: runId, error: refineToError(data)});\n      }\n    }\n\n    dispatch({type: 'complete'});\n    onComplete();\n  };\n\n  const progressContent = () => {\n    switch (state.step) {\n      case 'initial':\n        return (\n          <Group direction=\"column\" spacing={8}>\n            <div>{`${count} ${count === 1 ? 'run' : 'runs'} will be deleted.`}</div>\n            <div>\n              Deleting runs will not prevent them from continuing to execute, and may result in\n              unexpected behavior.\n            </div>\n            {terminatableCount ? (\n              <div>\n                {terminatableCount > 1 ? (\n                  <>\n                    {`${terminatableCount} of these runs can be terminated. `}\n                    <strong>\n                      Please consider terminating these runs instead of deleting them.\n                    </strong>\n                  </>\n                ) : (\n                  <>\n                    {`1 run can be terminated instead. `}\n                    <strong>Please consider terminating this run instead of deleting it.</strong>\n                  </>\n                )}\n              </div>\n            ) : null}\n            <div>Do you wish to continue with deletion?</div>\n          </Group>\n        );\n      case 'deleting':\n      case 'completed':\n        const value = count > 0 ? state.deletion.completed / count : 1;\n        return (\n          <Group direction=\"column\" spacing={8}>\n            <div>Deleting…</div>\n            <ProgressBar intent=\"primary\" value={Math.max(0.1, value)} animate={value < 1} />\n            {state.step === 'deleting' ? (\n              <NavigationBlock message=\"Deletion in progress, please do not navigate away yet.\" />\n            ) : null}\n          </Group>\n        );\n      default:\n        return null;\n    }\n  };\n\n  const buttons = () => {\n    switch (state.step) {\n      case 'initial':\n        return (\n          <>\n            <Button intent=\"none\" onClick={onClose}>\n              Cancel\n            </Button>\n            <Button intent=\"danger\" onClick={mutate}>\n              {`Yes, delete ${`${count} ${count === 1 ? 'run' : 'runs'}`}`}\n            </Button>\n            {terminatableCount ? (\n              <Button intent=\"primary\" onClick={onTerminateInstead}>\n                {`Terminate ${`${terminatableCount} ${\n                  terminatableCount === 1 ? 'run' : 'runs'\n                }`} instead`}\n              </Button>\n            ) : null}\n          </>\n        );\n      case 'deleting':\n        return (\n          <Button intent=\"danger\" disabled>\n            Deleting…\n          </Button>\n        );\n      case 'completed':\n        return (\n          <Button intent=\"primary\" onClick={onClose}>\n            Done\n          </Button>\n        );\n    }\n  };\n\n  const completionContent = () => {\n    if (state.step === 'initial') {\n      return null;\n    }\n\n    if (state.step === 'deleting') {\n      return <div>Please do not close the window or navigate away during deletion.</div>;\n    }\n\n    const errors = state.deletion.errors;\n    const errorCount = Object.keys(errors).length;\n    const successCount = state.deletion.completed - errorCount;\n\n    return (\n      <Group direction=\"column\" spacing={8}>\n        {successCount ? (\n          <Group direction=\"row\" spacing={8} alignItems=\"center\">\n            <Icon name=\"check_circle\" color={Colors.Green500} />\n            <div>{`Successfully deleted ${successCount} ${\n              successCount === 1 ? 'run' : 'runs'\n            }.`}</div>\n          </Group>\n        ) : null}\n        {errorCount ? (\n          <Group direction=\"column\" spacing={8}>\n            <Group direction=\"row\" spacing={8} alignItems=\"center\">\n              <Icon name=\"warning\" color={Colors.Yellow500} />\n              <div>{`Could not delete ${errorCount} ${errorCount === 1 ? 'run' : 'runs'}.`}</div>\n            </Group>\n            <ul>\n              {Object.keys(errors).map((runId) => (\n                <li key={runId}>\n                  <Group direction=\"row\" spacing={8}>\n                    <Mono>{runId.slice(0, 8)}</Mono>\n                    {errors[runId] ? <div>{errors[runId]?.message}</div> : null}\n                  </Group>\n                </li>\n              ))}\n            </ul>\n          </Group>\n        ) : null}\n      </Group>\n    );\n  };\n\n  const canQuicklyClose = state.step !== 'deleting';\n\n  return (\n    <Dialog\n      isOpen={isOpen}\n      title=\"Delete runs\"\n      canEscapeKeyClose={canQuicklyClose}\n      canOutsideClickClose={canQuicklyClose}\n      onClose={onClose}\n    >\n      <DialogBody>\n        <Group direction=\"column\" spacing={24}>\n          {progressContent()}\n          {completionContent()}\n        </Group>\n      </DialogBody>\n      <DialogFooter>{buttons()}</DialogFooter>\n    </Dialog>\n  );\n};\n","// eslint-disable-next-line no-restricted-imports\nimport {Placement} from '@blueprintjs/popover2';\nimport React from 'react';\nimport styled, {CSSProperties} from 'styled-components';\n\nimport {Box} from './Box';\nimport {Button} from './Button';\nimport {Colors} from './Colors';\nimport {Popover} from './Popover';\nimport {Subheading} from './Text';\n\nexport enum ProductTourPosition {\n  TOP_LEFT = 'top-start',\n  TOP_CENTER = 'top',\n  TOP_RIGHT = 'top-end',\n  BOTTOM_LEFT = 'bottom-start',\n  BOTTOM_CENTER = 'bottom',\n  BOTTOM_RIGHT = 'bottom-end',\n}\n\ntype ObjectType =\n  | {img: string; video?: undefined; object?: undefined}\n  | {video: string; img?: undefined; object?: undefined}\n  | {object: React.ReactNode; video?: undefined; img?: undefined}\n  | {img?: undefined; video?: undefined; object?: undefined};\n\ntype Props = {\n  children: React.ReactNode;\n  title: React.ReactNode;\n  description?: React.ReactNode;\n  actions?: {\n    next?: () => void;\n    dismiss?: () => void;\n  };\n  position: ProductTourPosition;\n  width?: CSSProperties['width'];\n} & ObjectType;\n\nexport const ProductTour: React.FC<Props> = ({\n  title,\n  description,\n  actions,\n  position,\n  children,\n  img,\n  video,\n  object,\n  width = '260px',\n}) => {\n  const media = React.useMemo(() => {\n    if (img) {\n      return <img src={img} style={{borderRadius: '6px'}} />;\n    }\n    if (video) {\n      return <video src={video} style={{borderRadius: '6px'}} autoPlay loop muted />;\n    }\n    return object;\n  }, [img, video, object]);\n\n  const actionsJsx = React.useMemo(() => {\n    return (\n      <ActionsContainer flex={{gap: 6, direction: 'row'}} margin={{top: 8}}>\n        {actions?.next ? <Button onClick={actions.next}>Next</Button> : null}\n        {actions?.dismiss ? <Button onClick={actions.dismiss}>Dismiss</Button> : null}\n      </ActionsContainer>\n    );\n  }, [actions?.next, actions?.dismiss]);\n\n  return (\n    <Popover\n      isOpen={true}\n      placement={position as Placement}\n      modifiers={{\n        arrow: {enabled: true},\n        preventOverflow: {enabled: true},\n      }}\n      minimal={false}\n      content={\n        <>\n          <div />\n          <ProductTourContainer flex={{direction: 'column', gap: 4}} padding={16} style={{width}}>\n            <Box flex={{direction: 'column', gap: 8}}>\n              {media}\n              <Subheading style={{fontSize: '16px'}}>{title}</Subheading>\n            </Box>\n            <div>{description}</div>\n            {actionsJsx}\n          </ProductTourContainer>\n          <div />\n        </>\n      }\n    >\n      {children}\n    </Popover>\n  );\n};\n\nconst ProductTourContainer = styled(Box)`\n  pointer-events: all;\n  background: ${Colors.Gray900};\n  border-radius: 4px;\n  padding: 16px;\n  box-shadow: 0px 2px 12px rgba(0, 0, 0, 0.12);\n\n  &,\n  button {\n    &,\n    &:hover,\n    &:focus {\n      color: ${Colors.White};\n    }\n  }\n`;\n\nconst ActionsContainer = styled(Box)`\n  > *:not(:first-child) {\n    &,\n    &:hover,\n    &:focus {\n      border: none;\n      box-shadow: none;\n    }\n  }\n  > * {\n    &:hover,\n    &:focus {\n      opacity: 0.9;\n    }\n  }\n`;\n","import {useMutation} from '@apollo/client';\n// eslint-disable-next-line no-restricted-imports\nimport {ProgressBar} from '@blueprintjs/core';\nimport {\n  Button,\n  Colors,\n  DialogBody,\n  DialogFooter,\n  Dialog,\n  Group,\n  Icon,\n  Mono,\n} from '@dagster-io/ui-components';\nimport * as React from 'react';\n\nimport {ReexecutionStrategy} from '../graphql/types';\n\nimport {NavigationBlock} from './NavigationBlock';\nimport {LAUNCH_PIPELINE_REEXECUTION_MUTATION} from './RunUtils';\nimport {\n  LaunchPipelineReexecutionMutation,\n  LaunchPipelineReexecutionMutationVariables,\n} from './types/RunUtils.types';\n\ninterface Props {\n  isOpen: boolean;\n  onClose: () => void;\n  onComplete: (reexecutionState: ReexecutionState) => void;\n  selectedRuns: {[id: string]: string};\n  reexecutionStrategy: ReexecutionStrategy;\n}\n\nconst refineToError = (data: LaunchPipelineReexecutionMutation | null | undefined) => {\n  if (data?.launchPipelineReexecution.__typename === 'LaunchRunSuccess') {\n    throw new Error('Not an error!');\n  }\n  return data?.launchPipelineReexecution;\n};\n\ntype Error = ReturnType<typeof refineToError>;\n\nconst errorText = (error: Error) => {\n  if (!error) {\n    return 'Unknown error';\n  }\n  switch (error.__typename) {\n    case 'ConflictingExecutionParamsError':\n      return 'Conflicting execution parameters';\n    case 'InvalidOutputError':\n      return 'Invalid output';\n    case 'InvalidStepError':\n      return 'Invalid step';\n    case 'NoModeProvidedError':\n      return 'No mode provided';\n    case 'PipelineNotFoundError':\n      return 'Job not found in workspace';\n    case 'PresetNotFoundError':\n      return 'Preset not found';\n    case 'PythonError':\n      return error.message;\n    case 'RunConfigValidationInvalid':\n      return 'Run config invalid';\n    case 'RunConflict':\n      return 'Run conflict';\n    case 'UnauthorizedError':\n      return 'Re-execution not authorized';\n    case 'InvalidSubsetError':\n      return 'Invalid op subset: ' + error.message;\n    default:\n      return 'Unknown error';\n  }\n};\n\ntype ReexecutionState = {completed: number; errors: {[id: string]: Error}};\n\ntype ReexecutionDialogState = {\n  frozenRuns: SelectedRuns;\n  step: 'initial' | 'reexecuting' | 'completed';\n  reexecution: ReexecutionState;\n};\n\ntype SelectedRuns = {[id: string]: string};\n\nconst initializeState = (selectedRuns: SelectedRuns): ReexecutionDialogState => {\n  return {\n    frozenRuns: selectedRuns,\n    step: 'initial',\n    reexecution: {completed: 0, errors: {}},\n  };\n};\n\ntype ReexecutionDialogAction =\n  | {type: 'reset'; frozenRuns: SelectedRuns}\n  | {type: 'start'}\n  | {type: 'reexecution-success'}\n  | {type: 'reexecution-error'; id: string; error: Error}\n  | {type: 'complete'};\n\nconst reexecutionDialogReducer = (\n  prevState: ReexecutionDialogState,\n  action: ReexecutionDialogAction,\n): ReexecutionDialogState => {\n  switch (action.type) {\n    case 'reset':\n      return initializeState(action.frozenRuns);\n    case 'start':\n      return {...prevState, step: 'reexecuting'};\n    case 'reexecution-success': {\n      const {reexecution} = prevState;\n      return {\n        ...prevState,\n        step: 'reexecuting',\n        reexecution: {...reexecution, completed: reexecution.completed + 1},\n      };\n    }\n    case 'reexecution-error': {\n      const {reexecution} = prevState;\n      return {\n        ...prevState,\n        step: 'reexecuting',\n        reexecution: {\n          ...reexecution,\n          completed: reexecution.completed + 1,\n          errors: {...reexecution.errors, [action.id]: action.error},\n        },\n      };\n    }\n    case 'complete':\n      return {...prevState, step: 'completed'};\n  }\n};\n\nexport const ReexecutionDialog = (props: Props) => {\n  const {isOpen, onClose, onComplete, reexecutionStrategy, selectedRuns} = props;\n\n  // Freeze the selected IDs, since the list may change as runs continue processing and\n  // re-executing. We want to preserve the list we're given.\n  const frozenRuns = React.useRef<SelectedRuns>(selectedRuns);\n\n  const [state, dispatch] = React.useReducer(\n    reexecutionDialogReducer,\n    frozenRuns.current,\n    initializeState,\n  );\n\n  const count = Object.keys(state.frozenRuns).length;\n\n  // If the dialog is newly open, update state to match the frozen list.\n  React.useEffect(() => {\n    if (isOpen) {\n      dispatch({type: 'reset', frozenRuns: frozenRuns.current});\n    }\n  }, [isOpen]);\n\n  // If the dialog is not open, update the ref so that the frozen list will be entered\n  // into state the next time the dialog opens.\n  React.useEffect(() => {\n    if (!isOpen) {\n      frozenRuns.current = selectedRuns;\n    }\n  }, [isOpen, selectedRuns]);\n\n  const [reexecute] = useMutation<\n    LaunchPipelineReexecutionMutation,\n    LaunchPipelineReexecutionMutationVariables\n  >(LAUNCH_PIPELINE_REEXECUTION_MUTATION);\n\n  const mutate = async () => {\n    dispatch({type: 'start'});\n\n    const runList = Object.keys(state.frozenRuns);\n    for (const runId of runList) {\n      const {data} = await reexecute({\n        variables: {\n          reexecutionParams: {\n            parentRunId: runId,\n            strategy: reexecutionStrategy,\n          },\n        },\n      });\n\n      if (data?.launchPipelineReexecution.__typename === 'LaunchRunSuccess') {\n        dispatch({type: 'reexecution-success'});\n      } else {\n        dispatch({type: 'reexecution-error', id: runId, error: refineToError(data)});\n      }\n    }\n\n    dispatch({type: 'complete'});\n    onComplete(state.reexecution);\n  };\n\n  const progressContent = () => {\n    switch (state.step) {\n      case 'initial':\n        if (!count) {\n          return (\n            <Group direction=\"column\" spacing={16}>\n              <div>No runs selected for re-execution.</div>\n              <div>The runs you selected may already have finished executing.</div>\n            </Group>\n          );\n        }\n\n        const message = () => {\n          if (reexecutionStrategy === ReexecutionStrategy.ALL_STEPS) {\n            return (\n              <span>\n                {`${count} ${count === 1 ? 'run' : 'runs'} will be re-executed `}\n                <strong>with all steps</strong>. Do you wish to continue?\n              </span>\n            );\n          }\n          return (\n            <span>\n              {`${count} ${count === 1 ? 'run' : 'runs'} will be re-executed `}\n              <strong>from failure</strong>. Do you wish to continue?\n            </span>\n          );\n        };\n\n        return (\n          <Group direction=\"column\" spacing={16}>\n            <div>{message()}</div>\n          </Group>\n        );\n      case 'reexecuting':\n      case 'completed':\n        const value = count > 0 ? state.reexecution.completed / count : 1;\n        return (\n          <Group direction=\"column\" spacing={8}>\n            <ProgressBar intent=\"primary\" value={Math.max(0.1, value)} animate={value < 1} />\n            {state.step === 'reexecuting' ? (\n              <NavigationBlock message=\"Re-execution in progress, please do not navigate away yet.\" />\n            ) : null}\n          </Group>\n        );\n      default:\n        return null;\n    }\n  };\n\n  const buttons = () => {\n    switch (state.step) {\n      case 'initial':\n        if (!count) {\n          return (\n            <Button intent=\"none\" onClick={onClose}>\n              OK\n            </Button>\n          );\n        }\n\n        return (\n          <>\n            <Button intent=\"none\" onClick={onClose}>\n              Cancel\n            </Button>\n            <Button intent=\"primary\" onClick={mutate}>\n              {`Re-execute ${`${count} ${count === 1 ? 'run' : 'runs'}`}`}\n            </Button>\n          </>\n        );\n      case 'reexecuting':\n        return (\n          <Button intent=\"primary\" disabled>\n            {`Re-executing ${`${count} ${count === 1 ? 'run' : 'runs'}...`}`}\n          </Button>\n        );\n      case 'completed':\n        return (\n          <Button intent=\"primary\" onClick={onClose}>\n            Done\n          </Button>\n        );\n    }\n  };\n\n  const completionContent = () => {\n    if (state.step === 'initial') {\n      return null;\n    }\n\n    if (state.step === 'reexecuting') {\n      return <div>Please do not close the window or navigate away during re-execution.</div>;\n    }\n\n    const errors = state.reexecution.errors;\n    const errorCount = Object.keys(errors).length;\n    const successCount = state.reexecution.completed - errorCount;\n\n    return (\n      <Group direction=\"column\" spacing={8}>\n        {successCount ? (\n          <Group direction=\"row\" spacing={8} alignItems=\"flex-start\">\n            <Icon name=\"check_circle\" color={Colors.Green500} />\n            <div>\n              {`Successfully requested re-execution for ${successCount} ${\n                successCount === 1 ? 'run' : `runs`\n              }.`}\n            </div>\n          </Group>\n        ) : null}\n        {errorCount ? (\n          <Group direction=\"column\" spacing={8}>\n            <Group direction=\"row\" spacing={8} alignItems=\"flex-start\">\n              <Icon name=\"warning\" color={Colors.Yellow500} />\n              <div>\n                {`Could not request re-execution for ${errorCount} ${\n                  errorCount === 1 ? 'run' : 'runs'\n                }:`}\n              </div>\n            </Group>\n            <ul>\n              {Object.keys(errors).map((runId) => (\n                <li key={runId}>\n                  <Group direction=\"row\" spacing={8} alignItems=\"baseline\">\n                    <Mono>{runId.slice(0, 8)}</Mono>\n                    {errors[runId] ? <div>{errorText(errors[runId])}</div> : null}\n                  </Group>\n                </li>\n              ))}\n            </ul>\n          </Group>\n        ) : null}\n      </Group>\n    );\n  };\n\n  const canQuicklyClose = state.step !== 'reexecuting';\n\n  return (\n    <Dialog\n      isOpen={isOpen}\n      title={\n        reexecutionStrategy === ReexecutionStrategy.ALL_STEPS\n          ? 'Re-execute runs'\n          : 'Re-execute runs from failure'\n      }\n      canEscapeKeyClose={canQuicklyClose}\n      canOutsideClickClose={canQuicklyClose}\n      onClose={onClose}\n    >\n      <DialogBody>\n        <Group direction=\"column\" spacing={24}>\n          {progressContent()}\n          {completionContent()}\n        </Group>\n      </DialogBody>\n      <DialogFooter>{buttons()}</DialogFooter>\n    </Dialog>\n  );\n};\n","import {gql, useLazyQuery} from '@apollo/client';\nimport {\n  Button,\n  Icon,\n  MenuDivider,\n  MenuExternalLink,\n  MenuItem,\n  Menu,\n  Popover,\n  Tooltip,\n  DialogFooter,\n  Dialog,\n  JoinedButtons,\n  DialogBody,\n  Box,\n  Colors,\n  StyledRawCodeMirror,\n} from '@dagster-io/ui-components';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport {AppContext} from '../app/AppContext';\nimport {showSharedToaster} from '../app/DomUtils';\nimport {DEFAULT_DISABLED_REASON} from '../app/Permissions';\nimport {useCopyToClipboard} from '../app/browser';\nimport {ReexecutionStrategy} from '../graphql/types';\nimport {NO_LAUNCH_PERMISSION_MESSAGE} from '../launchpad/LaunchRootExecutionButton';\nimport {getPipelineSnapshotLink} from '../pipelines/PipelinePathUtils';\nimport {AnchorButton} from '../ui/AnchorButton';\nimport {MenuLink} from '../ui/MenuLink';\nimport {isThisThingAJob} from '../workspace/WorkspaceContext';\nimport {useRepositoryForRunWithParentSnapshot} from '../workspace/useRepositoryForRun';\nimport {workspacePathFromRunDetails} from '../workspace/workspacePath';\n\nimport {DeletionDialog} from './DeletionDialog';\nimport {ReexecutionDialog} from './ReexecutionDialog';\nimport {doneStatuses, failedStatuses} from './RunStatuses';\nimport {RunTags} from './RunTags';\nimport {RunsQueryRefetchContext} from './RunUtils';\nimport {RunFilterToken} from './RunsFilterInput';\nimport {TerminationDialog} from './TerminationDialog';\nimport {\n  PipelineEnvironmentQuery,\n  PipelineEnvironmentQueryVariables,\n} from './types/RunActionsMenu.types';\nimport {RunTableRunFragment} from './types/RunTable.types';\nimport {useJobAvailabilityErrorForRun} from './useJobAvailabilityErrorForRun';\nimport {useJobReexecution} from './useJobReExecution';\n\nexport const RunActionsMenu: React.FC<{\n  run: RunTableRunFragment;\n  additionalActionsForRun?: (run: RunTableRunFragment) => React.ReactNode[];\n  onAddTag?: (token: RunFilterToken) => void;\n}> = React.memo(({run, onAddTag, additionalActionsForRun}) => {\n  const {refetch} = React.useContext(RunsQueryRefetchContext);\n  const [visibleDialog, setVisibleDialog] = React.useState<\n    'none' | 'terminate' | 'delete' | 'config' | 'tags'\n  >('none');\n\n  const {rootServerURI} = React.useContext(AppContext);\n\n  const copyConfig = useCopyToClipboard();\n  const reexecute = useJobReexecution({onCompleted: refetch});\n\n  const [loadEnv, {called, loading, data}] = useLazyQuery<\n    PipelineEnvironmentQuery,\n    PipelineEnvironmentQueryVariables\n  >(PIPELINE_ENVIRONMENT_QUERY, {\n    variables: {runId: run.id},\n  });\n\n  const closeDialogs = () => {\n    setVisibleDialog('none');\n  };\n\n  const onComplete = () => {\n    refetch();\n  };\n\n  const pipelineRun =\n    data?.pipelineRunOrError?.__typename === 'Run' ? data?.pipelineRunOrError : null;\n  const runConfigYaml = pipelineRun?.runConfigYaml;\n\n  const repoMatch = useRepositoryForRunWithParentSnapshot(pipelineRun);\n  const jobError = useJobAvailabilityErrorForRun({\n    ...run,\n    parentPipelineSnapshotId: pipelineRun?.parentPipelineSnapshotId,\n  });\n\n  const isFinished = doneStatuses.has(run.status);\n  const isJob = !!(repoMatch && isThisThingAJob(repoMatch?.match, run.pipelineName));\n\n  const infoReady = called ? !loading : false;\n\n  const reexecutionDisabledState = React.useMemo(() => {\n    if (!run.hasReExecutePermission) {\n      return {disabled: true, message: DEFAULT_DISABLED_REASON};\n    }\n    if (jobError) {\n      return {disabled: jobError.disabled, message: jobError.tooltip};\n    }\n    if (!infoReady) {\n      return {disabled: true};\n    }\n    return {disabled: false};\n  }, [run.hasReExecutePermission, jobError, infoReady]);\n\n  return (\n    <>\n      <JoinedButtons>\n        <AnchorButton to={`/runs/${run.id}`}>View run</AnchorButton>\n        <Popover\n          content={\n            <Menu>\n              <MenuItem\n                tagName=\"button\"\n                style={{minWidth: 200}}\n                text={loading ? 'Loading configuration...' : 'View configuration...'}\n                disabled={!runConfigYaml}\n                icon=\"open_in_new\"\n                onClick={() => setVisibleDialog('config')}\n              />\n              <MenuItem\n                tagName=\"button\"\n                text={\n                  <div style={{display: 'contents'}}>\n                    View all tags\n                    <Box\n                      flex={{\n                        justifyContent: 'center',\n                        alignItems: 'center',\n                        display: 'inline-flex',\n                      }}\n                      padding={{horizontal: 8}}\n                    >\n                      <SlashShortcut>t</SlashShortcut>\n                    </Box>\n                  </div>\n                }\n                icon=\"tag\"\n                onClick={() => setVisibleDialog('tags')}\n              />\n\n              {run.pipelineSnapshotId ? (\n                <LinkNoUnderline\n                  to={getPipelineSnapshotLink(run.pipelineName, run.pipelineSnapshotId)}\n                >\n                  <MenuItem\n                    tagName=\"button\"\n                    icon=\"job\"\n                    text=\"View snapshot\"\n                    onClick={() => setVisibleDialog('tags')}\n                  />\n                </LinkNoUnderline>\n              ) : null}\n              <MenuDivider />\n              <>\n                <Tooltip\n                  content={\n                    run.hasReExecutePermission\n                      ? OPEN_LAUNCHPAD_UNKNOWN\n                      : NO_LAUNCH_PERMISSION_MESSAGE\n                  }\n                  position=\"left\"\n                  disabled={infoReady && run.hasReExecutePermission}\n                  targetTagName=\"div\"\n                >\n                  <MenuLink\n                    text=\"Open in Launchpad...\"\n                    disabled={!infoReady || !run.hasReExecutePermission}\n                    icon=\"edit\"\n                    to={workspacePathFromRunDetails({\n                      id: run.id,\n                      pipelineName: run.pipelineName,\n                      repositoryName: repoMatch?.match.repository.name,\n                      repositoryLocationName: repoMatch?.match.repositoryLocation.name,\n                      isJob,\n                    })}\n                  />\n                </Tooltip>\n                <Tooltip\n                  content={reexecutionDisabledState.message || ''}\n                  position=\"left\"\n                  canShow={reexecutionDisabledState.disabled}\n                  targetTagName=\"div\"\n                >\n                  <MenuItem\n                    tagName=\"button\"\n                    text=\"Re-execute\"\n                    disabled={reexecutionDisabledState.disabled}\n                    icon=\"refresh\"\n                    onClick={async () => {\n                      await reexecute(run, ReexecutionStrategy.ALL_STEPS);\n                    }}\n                  />\n                </Tooltip>\n                {isFinished || !run.hasTerminatePermission ? null : (\n                  <MenuItem\n                    tagName=\"button\"\n                    icon=\"cancel\"\n                    text=\"Terminate\"\n                    onClick={() => setVisibleDialog('terminate')}\n                  />\n                )}\n                {additionalActionsForRun?.(run)}\n                <MenuDivider />\n              </>\n              <MenuExternalLink\n                text=\"Download debug file\"\n                icon=\"download_for_offline\"\n                download\n                href={`${rootServerURI}/download_debug/${run.id}`}\n              />\n              {run.hasDeletePermission ? (\n                <MenuItem\n                  tagName=\"button\"\n                  icon=\"delete\"\n                  text=\"Delete\"\n                  intent=\"danger\"\n                  onClick={() => setVisibleDialog('delete')}\n                />\n              ) : null}\n            </Menu>\n          }\n          position=\"bottom-right\"\n          onOpening={() => {\n            if (!called) {\n              loadEnv();\n            }\n          }}\n        >\n          <Button icon={<Icon name=\"expand_more\" />} />\n        </Popover>\n      </JoinedButtons>\n      {run.hasTerminatePermission ? (\n        <TerminationDialog\n          isOpen={visibleDialog === 'terminate'}\n          onClose={closeDialogs}\n          onComplete={onComplete}\n          selectedRuns={{[run.id]: run.canTerminate}}\n        />\n      ) : null}\n      {run.hasDeletePermission ? (\n        <DeletionDialog\n          isOpen={visibleDialog === 'delete'}\n          onClose={closeDialogs}\n          onComplete={onComplete}\n          onTerminateInstead={() => setVisibleDialog('terminate')}\n          selectedRuns={{[run.id]: run.canTerminate}}\n        />\n      ) : null}\n      <Dialog\n        isOpen={visibleDialog === 'tags'}\n        title=\"Tags\"\n        canOutsideClickClose\n        canEscapeKeyClose\n        onClose={closeDialogs}\n      >\n        <DialogBody>\n          <RunTags\n            tags={run.tags}\n            mode={isJob ? (run.mode !== 'default' ? run.mode : null) : run.mode}\n            onAddTag={onAddTag}\n          />\n        </DialogBody>\n        <DialogFooter topBorder>\n          <Button intent=\"primary\" onClick={closeDialogs}>\n            Close\n          </Button>\n        </DialogFooter>\n      </Dialog>\n      <Dialog\n        isOpen={visibleDialog === 'config'}\n        title=\"Config\"\n        canOutsideClickClose\n        canEscapeKeyClose\n        onClose={closeDialogs}\n      >\n        <StyledRawCodeMirror\n          value={runConfigYaml || ''}\n          options={{readOnly: true, lineNumbers: true, mode: 'yaml'}}\n        />\n        <DialogFooter topBorder>\n          <Button\n            intent=\"none\"\n            onClick={async () => {\n              copyConfig(runConfigYaml || '');\n              await showSharedToaster({\n                intent: 'success',\n                icon: 'copy_to_clipboard_done',\n                message: 'Copied!',\n              });\n            }}\n          >\n            Copy config\n          </Button>\n          <Button intent=\"primary\" onClick={closeDialogs}>\n            OK\n          </Button>\n        </DialogFooter>\n      </Dialog>\n    </>\n  );\n});\n\nexport const RunBulkActionsMenu: React.FC<{\n  selected: RunTableRunFragment[];\n  clearSelection: () => void;\n}> = React.memo(({selected, clearSelection}) => {\n  const {refetch} = React.useContext(RunsQueryRefetchContext);\n\n  const [visibleDialog, setVisibleDialog] = React.useState<\n    'none' | 'terminate' | 'delete' | 'reexecute-from-failure' | 'reexecute'\n  >('none');\n\n  const canTerminateAny = React.useMemo(() => {\n    return selected.some((run) => run.hasTerminatePermission);\n  }, [selected]);\n\n  const canDeleteAny = React.useMemo(() => {\n    return selected.some((run) => run.hasTerminatePermission);\n  }, [selected]);\n\n  const canReexecuteAny = React.useMemo(() => {\n    return selected.some((run) => run.hasReExecutePermission);\n  }, [selected]);\n\n  const disabled = !canTerminateAny && !canDeleteAny;\n\n  const terminatableRuns = selected.filter(\n    (r) => !doneStatuses.has(r?.status) && r.hasTerminatePermission,\n  );\n  const terminateableIDs = terminatableRuns.map((r) => r.id);\n  const terminateableMap = terminatableRuns.reduce(\n    (accum, run) => ({...accum, [run.id]: run.canTerminate}),\n    {},\n  );\n\n  const deleteableIDs = selected.map((run) => run.id);\n  const deletionMap = selected.reduce((accum, run) => ({...accum, [run.id]: run.canTerminate}), {});\n\n  const reexecuteFromFailureRuns = selected.filter(\n    (r) => failedStatuses.has(r?.status) && r.hasReExecutePermission,\n  );\n  const reexecuteFromFailureMap = reexecuteFromFailureRuns.reduce(\n    (accum, run) => ({...accum, [run.id]: run.id}),\n    {},\n  );\n\n  const reexecutableRuns = selected.filter(\n    (r) => doneStatuses.has(r?.status) && r.hasReExecutePermission,\n  );\n  const reexecutableMap = reexecutableRuns.reduce(\n    (accum, run) => ({...accum, [run.id]: run.id}),\n    {},\n  );\n\n  const closeDialogs = () => {\n    setVisibleDialog('none');\n  };\n\n  const onComplete = () => {\n    clearSelection();\n    refetch();\n  };\n\n  return (\n    <>\n      <Popover\n        disabled={disabled || selected.length === 0}\n        content={\n          <Menu>\n            {canTerminateAny ? (\n              <MenuItem\n                icon=\"cancel\"\n                text={`Terminate ${terminateableIDs.length} ${\n                  terminateableIDs.length === 1 ? 'run' : 'runs'\n                }`}\n                disabled={terminateableIDs.length === 0}\n                onClick={() => {\n                  setVisibleDialog('terminate');\n                }}\n              />\n            ) : null}\n            {canDeleteAny ? (\n              <MenuItem\n                icon=\"delete\"\n                intent=\"danger\"\n                text={`Delete ${deleteableIDs.length} ${\n                  deleteableIDs.length === 1 ? 'run' : 'runs'\n                }`}\n                disabled={deleteableIDs.length === 0}\n                onClick={() => {\n                  setVisibleDialog('delete');\n                }}\n              />\n            ) : null}\n            {canReexecuteAny ? (\n              <>\n                <MenuItem\n                  icon=\"refresh\"\n                  text={`Re-execute ${reexecutableRuns.length} ${\n                    reexecutableRuns.length === 1 ? 'run' : 'runs'\n                  }`}\n                  disabled={reexecutableRuns.length === 0}\n                  onClick={() => {\n                    setVisibleDialog('reexecute');\n                  }}\n                />\n                <MenuItem\n                  icon=\"refresh\"\n                  text={`Re-execute ${reexecuteFromFailureRuns.length} ${\n                    reexecuteFromFailureRuns.length === 1 ? 'run' : 'runs'\n                  } from failure`}\n                  disabled={reexecuteFromFailureRuns.length === 0}\n                  onClick={() => {\n                    setVisibleDialog('reexecute-from-failure');\n                  }}\n                />\n              </>\n            ) : null}\n          </Menu>\n        }\n        position=\"bottom-right\"\n      >\n        <Button\n          disabled={disabled || selected.length === 0}\n          rightIcon={<Icon name=\"expand_more\" />}\n          intent=\"primary\"\n        >\n          Actions\n        </Button>\n      </Popover>\n      <TerminationDialog\n        isOpen={visibleDialog === 'terminate'}\n        onClose={closeDialogs}\n        onComplete={onComplete}\n        selectedRuns={terminateableMap}\n      />\n      <DeletionDialog\n        isOpen={visibleDialog === 'delete'}\n        onClose={closeDialogs}\n        onComplete={onComplete}\n        onTerminateInstead={() => setVisibleDialog('terminate')}\n        selectedRuns={deletionMap}\n      />\n      <ReexecutionDialog\n        isOpen={visibleDialog === 'reexecute-from-failure'}\n        onClose={closeDialogs}\n        onComplete={onComplete}\n        selectedRuns={reexecuteFromFailureMap}\n        reexecutionStrategy={ReexecutionStrategy.FROM_FAILURE}\n      />\n      <ReexecutionDialog\n        isOpen={visibleDialog === 'reexecute'}\n        onClose={closeDialogs}\n        onComplete={onComplete}\n        selectedRuns={reexecutableMap}\n        reexecutionStrategy={ReexecutionStrategy.ALL_STEPS}\n      />\n    </>\n  );\n});\n\nconst OPEN_LAUNCHPAD_UNKNOWN =\n  'Launchpad is unavailable because the pipeline is not present in the current repository.';\n\n// Avoid fetching envYaml and parentPipelineSnapshotId on load in Runs page, they're slow.\nconst PIPELINE_ENVIRONMENT_QUERY = gql`\n  query PipelineEnvironmentQuery($runId: ID!) {\n    pipelineRunOrError(runId: $runId) {\n      ... on Run {\n        id\n        pipelineName\n        pipelineSnapshotId\n        runConfigYaml\n        pipelineName\n        parentPipelineSnapshotId\n        repositoryOrigin {\n          id\n          repositoryName\n          repositoryLocationName\n        }\n      }\n    }\n  }\n`;\n\nconst SlashShortcut = styled.div`\n  border-radius: 4px;\n  padding: 0px 6px;\n  background: ${Colors.Gray100};\n  color: ${Colors.Gray500};\n`;\n\nconst LinkNoUnderline = styled(Link)`\n  text-decoration: none !important;\n`;\n","import {Box, Tag} from '@dagster-io/ui-components';\nimport React from 'react';\nimport {Link} from 'react-router-dom';\n\nimport {useLaunchPadHooks} from '../launchpad/LaunchpadHooksContext';\nimport {RepoAddress} from '../workspace/types';\nimport {workspacePathFromAddress} from '../workspace/workspacePath';\n\nimport {DagsterTag} from './RunTag';\nimport {RunTagsFragment} from './types/RunTable.types';\n\ntype Props = {\n  repoAddress?: RepoAddress | null;\n  tags: RunTagsFragment[];\n};\n\nexport const RunCreatedByCell = React.memo(({repoAddress, tags}: Props) => {\n  return (\n    <Box flex={{direction: 'column', alignItems: 'flex-start'}}>\n      <RunCreatedByTag repoAddress={repoAddress} tags={tags} />\n    </Box>\n  );\n});\n\nexport const RunCreatedByTag = ({repoAddress, tags}: Props) => {\n  const {UserDisplay} = useLaunchPadHooks();\n\n  const user = tags.find((tag) => tag.key === DagsterTag.User);\n  if (user) {\n    return <UserDisplay email={user.value} />;\n  }\n\n  const scheduleTag = tags.find((tag) => tag.key === DagsterTag.ScheduleName);\n  if (scheduleTag) {\n    const scheduleName = scheduleTag.value;\n    const tagContent = repoAddress ? (\n      <Link to={workspacePathFromAddress(repoAddress, `/schedules/${scheduleName}`)}>\n        {scheduleName}\n      </Link>\n    ) : (\n      scheduleName\n    );\n    return <Tag icon=\"schedule\">{tagContent}</Tag>;\n  }\n\n  const sensorTag = tags.find((tag) => tag.key === DagsterTag.SensorName);\n  if (sensorTag) {\n    const sensorName = sensorTag.value;\n    const tagContent = repoAddress ? (\n      <Link to={workspacePathFromAddress(repoAddress, `/sensors/${sensorName}`)}>{sensorName}</Link>\n    ) : (\n      sensorName\n    );\n    return <Tag icon=\"sensors\">{tagContent}</Tag>;\n  }\n\n  const automaterialize = tags.some(\n    (tag) =>\n      tag.key === DagsterTag.Automaterialize ||\n      // Backwards compatibility\n      (tag.key === DagsterTag.CreatedBy && tag.value === 'auto_materialize'),\n  );\n\n  if (automaterialize) {\n    return <Tag icon=\"auto_materialize_policy\">Auto-materialize policy</Tag>;\n  }\n\n  const autoObserve = tags.some((tag) => tag.key === DagsterTag.AutoObserve);\n  if (autoObserve) {\n    return <Tag icon=\"auto_observe\">Auto-observation</Tag>;\n  }\n\n  return <Tag icon=\"account_circle\">Manually launched</Tag>;\n};\n","export default \"/_next/static/media/ShowAndHideRunTags.3fa9746ba2f415094d257d3c8e73389d.mp4\";","import {gql} from '@apollo/client';\nimport {\n  Box,\n  Checkbox,\n  Colors,\n  Icon,\n  NonIdealState,\n  Table,\n  Mono,\n  Tag,\n  Button,\n  Dialog,\n  DialogBody,\n  DialogFooter,\n  ButtonLink,\n  ProductTour,\n  ProductTourPosition,\n  Caption,\n} from '@dagster-io/ui-components';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport {ShortcutHandler} from '../app/ShortcutHandler';\nimport {isHiddenAssetGroupJob} from '../asset-graph/Utils';\nimport {RunsFilter} from '../graphql/types';\nimport {useSelectionReducer} from '../hooks/useSelectionReducer';\nimport {useStateWithStorage} from '../hooks/useStateWithStorage';\nimport {PipelineReference} from '../pipelines/PipelineReference';\nimport {AnchorButton} from '../ui/AnchorButton';\nimport {buildRepoAddress} from '../workspace/buildRepoAddress';\nimport {useRepositoryForRunWithoutSnapshot} from '../workspace/useRepositoryForRun';\nimport {workspacePipelinePath, workspacePipelinePathGuessRepo} from '../workspace/workspacePath';\n\nimport {AssetKeyTagCollection, AssetCheckTagCollection} from './AssetTagCollections';\nimport {RunActionsMenu, RunBulkActionsMenu} from './RunActionsMenu';\nimport {RunCreatedByCell} from './RunCreatedByCell';\nimport {RunStatusTagWithStats} from './RunStatusTag';\nimport {DagsterTag, TagType} from './RunTag';\nimport {RunTags} from './RunTags';\nimport {\n  assetKeysForRun,\n  RunStateSummary,\n  RunTime,\n  RUN_TIME_FRAGMENT,\n  titleForRun,\n} from './RunUtils';\nimport {RunFilterToken, runsPathWithFilters} from './RunsFilterInput';\nimport ShowAndHideTagsMP4 from './ShowAndHideRunTags.mp4';\nimport {RunTableRunFragment} from './types/RunTable.types';\n\ninterface RunTableProps {\n  runs: RunTableRunFragment[];\n  filter?: RunsFilter;\n  onAddTag?: (token: RunFilterToken) => void;\n  actionBarComponents?: React.ReactNode;\n  highlightedIds?: string[];\n  additionalColumnHeaders?: React.ReactNode[];\n  additionalColumnsForRow?: (run: RunTableRunFragment) => React.ReactNode[];\n  belowActionBarComponents?: React.ReactNode;\n  hideCreatedBy?: boolean;\n  additionalActionsForRun?: (run: RunTableRunFragment) => JSX.Element[];\n  emptyState?: () => React.ReactNode;\n}\n\nexport const RunTable = (props: RunTableProps) => {\n  const {\n    runs,\n    filter,\n    onAddTag,\n    highlightedIds,\n    actionBarComponents,\n    belowActionBarComponents,\n    hideCreatedBy,\n    emptyState,\n  } = props;\n  const allIds = runs.map((r) => r.id);\n\n  const [{checkedIds}, {onToggleFactory, onToggleAll}] = useSelectionReducer(allIds);\n\n  const canTerminateOrDeleteAny = React.useMemo(() => {\n    return runs.some((run) => run.hasTerminatePermission || run.hasDeletePermission);\n  }, [runs]);\n\n  function content() {\n    if (runs.length === 0) {\n      const anyFilter = !!Object.keys(filter || {}).length;\n      if (emptyState) {\n        return <>{emptyState()}</>;\n      }\n\n      return (\n        <div>\n          <Box margin={{vertical: 32}}>\n            {anyFilter ? (\n              <NonIdealState\n                icon=\"run\"\n                title=\"No matching runs\"\n                description=\"No runs were found for this filter.\"\n              />\n            ) : (\n              <NonIdealState\n                icon=\"run\"\n                title=\"No runs found\"\n                description={\n                  <Box flex={{direction: 'column', gap: 12}}>\n                    <div>You have not launched any runs yet.</div>\n                    <Box flex={{direction: 'row', gap: 12, alignItems: 'center'}}>\n                      <AnchorButton icon={<Icon name=\"add_circle\" />} to=\"/overview/jobs\">\n                        Launch a run\n                      </AnchorButton>\n                      <span>or</span>\n                      <AnchorButton icon={<Icon name=\"materialization\" />} to=\"/asset-groups\">\n                        Materialize an asset\n                      </AnchorButton>\n                    </Box>\n                  </Box>\n                }\n              />\n            )}\n          </Box>\n        </div>\n      );\n    } else {\n      return (\n        <Table>\n          <thead>\n            <tr>\n              {canTerminateOrDeleteAny ? (\n                <th style={{width: 42, paddingTop: 0, paddingBottom: 0}}>\n                  <Checkbox\n                    indeterminate={checkedIds.size > 0 && checkedIds.size !== runs.length}\n                    checked={checkedIds.size === runs.length}\n                    onChange={(e: React.FormEvent<HTMLInputElement>) => {\n                      if (e.target instanceof HTMLInputElement) {\n                        onToggleAll(e.target.checked);\n                      }\n                    }}\n                  />\n                </th>\n              ) : null}\n              <th style={{width: 90}}>Run ID</th>\n              <th style={{width: 180}}>Created date</th>\n              <th>\n                <TargetHeader />\n              </th>\n              {hideCreatedBy ? null : <th style={{width: 160}}>Launched by</th>}\n              <th style={{width: 120}}>Status</th>\n              <th style={{width: 190}}>Duration</th>\n              {props.additionalColumnHeaders}\n              <th style={{width: 52}} />\n            </tr>\n          </thead>\n          <tbody>\n            {runs.map((run) => (\n              <RunRow\n                canTerminateOrDelete={run.hasTerminatePermission || run.hasDeletePermission}\n                run={run}\n                key={run.id}\n                onAddTag={onAddTag}\n                checked={checkedIds.has(run.id)}\n                additionalColumns={props.additionalColumnsForRow?.(run)}\n                additionalActionsForRun={props.additionalActionsForRun}\n                onToggleChecked={onToggleFactory(run.id)}\n                isHighlighted={highlightedIds && highlightedIds.includes(run.id)}\n                hideCreatedBy={hideCreatedBy}\n              />\n            ))}\n          </tbody>\n        </Table>\n      );\n    }\n  }\n\n  const selectedFragments = runs.filter((run) => checkedIds.has(run.id));\n\n  return (\n    <>\n      <ActionBar\n        top={\n          <Box\n            flex={{\n              direction: 'row',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n              grow: 1,\n            }}\n          >\n            {actionBarComponents}\n            <RunBulkActionsMenu\n              selected={selectedFragments}\n              clearSelection={() => onToggleAll(false)}\n            />\n          </Box>\n        }\n        bottom={belowActionBarComponents}\n      />\n      {content()}\n    </>\n  );\n};\n\nexport const RUN_TAGS_FRAGMENT = gql`\n  fragment RunTagsFragment on PipelineTag {\n    key\n    value\n  }\n`;\n\nexport const RUN_TABLE_RUN_FRAGMENT = gql`\n  fragment RunTableRunFragment on Run {\n    id\n    status\n    stepKeysToExecute\n    canTerminate\n    hasReExecutePermission\n    hasTerminatePermission\n    hasDeletePermission\n    mode\n    rootRunId\n    parentRunId\n    pipelineSnapshotId\n    pipelineName\n    repositoryOrigin {\n      id\n      repositoryName\n      repositoryLocationName\n    }\n    solidSelection\n    assetSelection {\n      ... on AssetKey {\n        path\n      }\n    }\n    assetCheckSelection {\n      name\n      assetKey {\n        path\n      }\n    }\n    status\n    tags {\n      ...RunTagsFragment\n    }\n    ...RunTimeFragment\n  }\n\n  ${RUN_TIME_FRAGMENT}\n  ${RUN_TAGS_FRAGMENT}\n`;\n\nconst RunRow: React.FC<{\n  run: RunTableRunFragment;\n  canTerminateOrDelete: boolean;\n  onAddTag?: (token: RunFilterToken) => void;\n  checked?: boolean;\n  onToggleChecked?: (values: {checked: boolean; shiftKey: boolean}) => void;\n  additionalColumns?: React.ReactNode[];\n  additionalActionsForRun?: (run: RunTableRunFragment) => React.ReactNode[];\n  isHighlighted?: boolean;\n  hideCreatedBy?: boolean;\n}> = ({\n  run,\n  canTerminateOrDelete,\n  onAddTag,\n  checked,\n  onToggleChecked,\n  additionalColumns,\n  additionalActionsForRun,\n  isHighlighted,\n  hideCreatedBy,\n}) => {\n  const {pipelineName} = run;\n  const repo = useRepositoryForRunWithoutSnapshot(run);\n\n  const isJob = React.useMemo(() => {\n    if (repo) {\n      const pipelinesAndJobs = repo.match.repository.pipelines;\n      const match = pipelinesAndJobs.find((pipelineOrJob) => pipelineOrJob.name === pipelineName);\n      return !!match?.isJob;\n    }\n    return false;\n  }, [repo, pipelineName]);\n\n  const repoAddressGuess = React.useMemo(() => {\n    if (repo) {\n      const {match} = repo;\n      return buildRepoAddress(match.repository.name, match.repositoryLocation.name);\n    }\n    return null;\n  }, [repo]);\n\n  const onChange = (e: React.FormEvent<HTMLInputElement>) => {\n    if (e.target instanceof HTMLInputElement) {\n      const {checked} = e.target;\n      const shiftKey =\n        e.nativeEvent instanceof MouseEvent && e.nativeEvent.getModifierState('Shift');\n      onToggleChecked && onToggleChecked({checked, shiftKey});\n    }\n  };\n\n  // Most system tags are unpinned by default so we track pinned for these.\n  const [pinnedSystemTags, setPinnedSystemTags] = useStateWithStorage(\n    'pinned-system-tags',\n    (value) => {\n      if (Array.isArray(value)) {\n        return value;\n      }\n      return [];\n    },\n  );\n\n  // All user tags are pinned by default so we track unpinned.\n  const [unpinnedTags, setUnpinnedTags] = useStateWithStorage('unpinned-tags', (value) => {\n    if (Array.isArray(value)) {\n      return value;\n    }\n    return [];\n  });\n\n  const allTagsWithPinned = React.useMemo(() => {\n    const allTags: Omit<(typeof run.tags)[0], '__typename'>[] = [...run.tags];\n    if ((isJob && run.mode !== 'default') || !isJob) {\n      allTags.push({\n        key: 'mode',\n        value: run.mode,\n      });\n    }\n    return allTags.map((tag) => {\n      return {\n        ...tag,\n        pinned: isUnpinnedByDefaultSystemTag(tag.key)\n          ? pinnedSystemTags.indexOf(tag.key) !== -1\n          : unpinnedTags.indexOf(tag.key) === -1,\n      };\n    });\n  }, [run, isJob, pinnedSystemTags, unpinnedTags]);\n\n  const isReexecution = run.tags.some((tag) => tag.key === DagsterTag.ParentRunId);\n\n  const targetBackfill = allTagsWithPinned.find((tag) => tag.key === DagsterTag.Backfill);\n\n  const [showRunTags, setShowRunTags] = React.useState(false);\n  const [isHovered, setIsHovered] = React.useState(false);\n\n  const tagsToShow = React.useMemo(() => {\n    const tagKeys: Set<string> = new Set([]);\n    const tags: TagType[] = [];\n    if (targetBackfill && targetBackfill.pinned) {\n      const link = run.assetSelection?.length\n        ? `/overview/backfills/${targetBackfill.value}`\n        : runsPathWithFilters([\n            {\n              token: 'tag',\n              value: `${DagsterTag.Backfill}=${targetBackfill.value}`,\n            },\n          ]);\n      tags.push({\n        ...targetBackfill,\n        link,\n      });\n      tagKeys.add(DagsterTag.Backfill as string);\n    }\n    allTagsWithPinned.forEach((tag) => {\n      if (tagKeys.has(tag.key)) {\n        // We already added this tag\n        return;\n      }\n      if (tag.pinned) {\n        tags.push(tag);\n      }\n    });\n    return tags;\n  }, [targetBackfill, allTagsWithPinned, run.assetSelection?.length]);\n\n  const onToggleTagPin = React.useCallback(\n    (tagKey: string) => {\n      if (isUnpinnedByDefaultSystemTag(tagKey)) {\n        setPinnedSystemTags((pinnedSystemTags) => toggleTag(pinnedSystemTags, tagKey));\n      } else {\n        setUnpinnedTags((unpinnedTags) => toggleTag(unpinnedTags, tagKey));\n      }\n    },\n    [setUnpinnedTags, setPinnedSystemTags],\n  );\n\n  return (\n    <Row\n      highlighted={!!isHighlighted}\n      onMouseEnter={() => {\n        setIsHovered(true);\n      }}\n      onMouseLeave={() => {\n        setIsHovered(false);\n      }}\n    >\n      {canTerminateOrDelete ? (\n        <td>{onToggleChecked ? <Checkbox checked={!!checked} onChange={onChange} /> : null}</td>\n      ) : null}\n      <td>\n        <Link to={`/runs/${run.id}`}>\n          <Mono>{titleForRun(run)}</Mono>\n        </Link>\n      </td>\n      <td>\n        <Box flex={{direction: 'column', gap: 4}}>\n          <RunTime run={run} />\n          {isReexecution ? (\n            <div>\n              <Tag icon=\"cached\">Re-execution</Tag>\n            </div>\n          ) : null}\n        </Box>\n      </td>\n      <td style={{position: 'relative'}}>\n        <Box flex={{direction: 'column', gap: 5}}>\n          {isHiddenAssetGroupJob(run.pipelineName) ? (\n            <>\n              <AssetCheckTagCollection assetChecks={run.assetCheckSelection} />\n              <AssetKeyTagCollection assetKeys={assetKeysForRun(run)} />\n            </>\n          ) : (\n            <Box flex={{direction: 'row', gap: 8, alignItems: 'center'}}>\n              <PipelineReference\n                isJob={isJob}\n                showIcon\n                pipelineName={run.pipelineName}\n                pipelineHrefContext=\"no-link\"\n              />\n              <Link\n                to={\n                  repo\n                    ? workspacePipelinePath({\n                        repoName: repo.match.repository.name,\n                        repoLocation: repo.match.repositoryLocation.name,\n                        pipelineName: run.pipelineName,\n                        isJob,\n                      })\n                    : workspacePipelinePathGuessRepo(run.pipelineName)\n                }\n                target=\"_blank\"\n              >\n                <Icon name=\"open_in_new\" color={Colors.Blue500} />\n              </Link>\n            </Box>\n          )}\n          <Box\n            flex={{direction: 'row', alignItems: 'center', wrap: 'wrap'}}\n            style={{gap: '4px 8px'}}\n          >\n            <RunTagsWrapper>\n              {tagsToShow.length ? (\n                <RunTags tags={tagsToShow} onAddTag={onAddTag} onToggleTagPin={onToggleTagPin} />\n              ) : null}\n            </RunTagsWrapper>\n            {allTagsWithPinned.length > tagsToShow.length ? (\n              <Caption>\n                <ButtonLink\n                  onClick={() => {\n                    setShowRunTags(true);\n                  }}\n                  color={Colors.Gray700}\n                  style={{margin: '-4px', padding: '4px'}}\n                >\n                  View all tags ({allTagsWithPinned.length})\n                </ButtonLink>\n              </Caption>\n            ) : null}\n          </Box>\n        </Box>\n        {isHovered && allTagsWithPinned.length ? (\n          <ShortcutHandler\n            key=\"runtabletags\"\n            onShortcut={() => {\n              setShowRunTags((showRunTags) => !showRunTags);\n            }}\n            shortcutLabel=\"t\"\n            shortcutFilter={(e) => e.code === 'KeyT'}\n          >\n            {null}\n          </ShortcutHandler>\n        ) : null}\n      </td>\n      {hideCreatedBy ? null : (\n        <td>\n          <RunCreatedByCell repoAddress={repoAddressGuess} tags={run.tags || []} />\n        </td>\n      )}\n      <td>\n        <RunStatusTagWithStats status={run.status} runId={run.id} />\n      </td>\n      <td>\n        <RunStateSummary run={run} />\n      </td>\n      {additionalColumns}\n      <td>\n        <RunActionsMenu\n          run={run}\n          onAddTag={onAddTag}\n          additionalActionsForRun={additionalActionsForRun}\n        />\n      </td>\n      <Dialog\n        isOpen={showRunTags}\n        title=\"Tags\"\n        canOutsideClickClose\n        canEscapeKeyClose\n        onClose={() => {\n          setShowRunTags(false);\n        }}\n      >\n        <DialogBody>\n          <RunTags tags={allTagsWithPinned} onAddTag={onAddTag} onToggleTagPin={onToggleTagPin} />\n        </DialogBody>\n        <DialogFooter topBorder>\n          <Button\n            intent=\"primary\"\n            onClick={() => {\n              setShowRunTags(false);\n            }}\n          >\n            Close\n          </Button>\n        </DialogFooter>\n      </Dialog>\n    </Row>\n  );\n};\n\nconst Row = styled.tr<{highlighted: boolean}>`\n  ${({highlighted}) =>\n    highlighted ? `box-shadow: inset 3px 3px #bfccd6, inset -3px -3px #bfccd6;` : null}\n`;\n\nfunction ActionBar({top, bottom}: {top: React.ReactNode; bottom?: React.ReactNode}) {\n  return (\n    <Box flex={{direction: 'column'}} padding={{vertical: 12}}>\n      <Box flex={{alignItems: 'center', gap: 12}} padding={{left: 24, right: 12}}>\n        {top}\n      </Box>\n      {bottom ? (\n        <Box\n          margin={{top: 12}}\n          padding={{left: 24, right: 12, top: 8}}\n          border=\"top\"\n          flex={{gap: 8}}\n        >\n          {bottom}\n        </Box>\n      ) : null}\n    </Box>\n  );\n}\n\nconst RunTagsWrapper = styled.div`\n  display: contents;\n  > * {\n    display: contents;\n  }\n`;\n\nfunction isUnpinnedByDefaultSystemTag(key: string) {\n  return (\n    (key.startsWith(DagsterTag.Namespace) &&\n      key !== DagsterTag.Partition &&\n      key !== DagsterTag.Backfill) ||\n    key === 'mode'\n  );\n}\n\nfunction toggleTag(tagsArr: string[] | undefined, tagKey: string): string[] {\n  const tags = tagsArr || [];\n  if (tags.indexOf(tagKey) !== -1) {\n    return tags.filter((key) => key !== tagKey);\n  } else {\n    return [...tags, tagKey];\n  }\n}\n\nfunction TargetHeader() {\n  const [hideTabPinningNux, setHideTabPinningNux] = useStateWithStorage<any>(\n    'RunTableTabPinningNux',\n    (value) => value,\n  );\n  if (hideTabPinningNux) {\n    return <div>Target</div>;\n  }\n  return (\n    <ProductTour\n      title=\"Hide and show run tags\"\n      description={\n        <>\n          You can show tags that you prefer quick access to and hide tags you don&apos;t by hovering\n          over the tag and selecting the show/hide tag option.\n        </>\n      }\n      position={ProductTourPosition.BOTTOM_RIGHT}\n      video={ShowAndHideTagsMP4}\n      width=\"616px\"\n      actions={{\n        dismiss: () => {\n          setHideTabPinningNux('1');\n        },\n      }}\n    >\n      <div>Target</div>\n    </ProductTour>\n  );\n}\n","import {Box} from '@dagster-io/ui-components';\nimport * as React from 'react';\n\nimport {showSharedToaster} from '../app/DomUtils';\nimport {useCopyToClipboard} from '../app/browser';\nimport {__ASSET_JOB_PREFIX} from '../asset-graph/Utils';\nimport {TagAction} from '../ui/TagActions';\n\nimport {DagsterTag, RunTag, TagType} from './RunTag';\nimport {RunFilterToken} from './RunsFilterInput';\n\n// Sort these tags to the start of the list.\nconst priorityTags = ['mode', DagsterTag.Backfill as string, DagsterTag.Partition as string];\nconst priorityTagsSet = new Set(priorityTags);\n\nconst renamedTags = {\n  [DagsterTag.SolidSelection]: DagsterTag.OpSelection,\n};\n\nconst canAddTagToFilter = (key: string) => {\n  return key !== DagsterTag.SolidSelection && key !== DagsterTag.OpSelection && key !== 'mode';\n};\n\nexport const RunTags: React.FC<{\n  tags: TagType[];\n  mode?: string | null;\n  onAddTag?: (token: RunFilterToken) => void;\n  onToggleTagPin?: (key: string) => void;\n}> = React.memo(({tags, onAddTag, onToggleTagPin, mode}) => {\n  const copy = useCopyToClipboard();\n\n  const copyAction = React.useMemo(\n    () => ({\n      label: 'Copy tag',\n      onClick: async (tag: TagType) => {\n        copy(`${tag.key}:${tag.value}`);\n        await showSharedToaster({intent: 'success', message: 'Copied tag!'});\n      },\n    }),\n    [copy],\n  );\n\n  const addToFilterAction = React.useMemo(\n    () =>\n      onAddTag\n        ? {\n            label: 'Add tag to filter',\n            onClick: (tag: TagType) => {\n              onAddTag({token: 'tag', value: `${tag.originalKey || tag.key}=${tag.value}`});\n            },\n          }\n        : null,\n    [onAddTag],\n  );\n\n  const actionsForTag = (tag: TagType) => {\n    const list: TagAction[] = [copyAction];\n    if (addToFilterAction && canAddTagToFilter(tag.key)) {\n      list.push(addToFilterAction);\n    }\n    if (onToggleTagPin) {\n      list.push({\n        label: tag.pinned ? 'Hide tag' : 'Show tag in table',\n        onClick: () => {\n          onToggleTagPin(tag.originalKey || tag.key);\n        },\n      });\n    }\n    return list.filter((item) => !!item);\n  };\n\n  const displayedTags = React.useMemo(() => {\n    const priority = [];\n    const others = [];\n    const copiedTags: TagType[] = tags.map(({key, value, pinned, link}) => ({\n      key,\n      value,\n      pinned,\n      link,\n    }));\n    for (const tag of copiedTags) {\n      const {key} = tag;\n      if (renamedTags.hasOwnProperty(key)) {\n        tag.key = renamedTags[key as keyof typeof renamedTags];\n        tag.originalKey = key;\n      }\n\n      if (\n        tag.value.startsWith(__ASSET_JOB_PREFIX) &&\n        (key === DagsterTag.PartitionSet || key === DagsterTag.StepSelection)\n      ) {\n        continue;\n      } else if (priorityTagsSet.has(key)) {\n        priority.push(tag);\n      } else {\n        others.push(tag);\n      }\n    }\n    return [\n      ...priority.sort((a, b) => {\n        const aIndex = priorityTags.indexOf(a.key);\n        const bIndex = priorityTags.indexOf(b.key);\n        return aIndex - bIndex;\n      }),\n      ...others,\n    ];\n  }, [tags]);\n\n  if (!tags.length) {\n    return null;\n  }\n\n  const modeTag = mode ? (\n    <RunTag tag={{key: 'mode', value: mode}} actions={actionsForTag({key: 'mode', value: mode})} />\n  ) : null;\n  return (\n    <Box flex={{direction: 'row', wrap: 'wrap', gap: 4}}>\n      {modeTag}\n      {displayedTags.map((tag) => (\n        <RunTag tag={tag} key={tag.key} actions={actionsForTag(tag)} />\n      ))}\n    </Box>\n  );\n});\n","// eslint-disable-next-line no-restricted-imports\nimport {AnchorButton as BlueprintAnchorButton} from '@blueprintjs/core';\nimport {\n  intentToFillColor,\n  intentToStrokeColor,\n  intentToTextColor,\n  StyledButton,\n  StyledButtonText,\n} from '@dagster-io/ui-components';\nimport * as React from 'react';\nimport {Link, LinkProps} from 'react-router-dom';\n\ntype AnchorButtonProps = Omit<\n  React.ComponentProps<typeof BlueprintAnchorButton>,\n  'loading' | 'onClick' | 'onFocus' | 'type'\n> &\n  LinkProps & {\n    label?: React.ReactNode;\n  };\n\nexport const AnchorButton = React.forwardRef(\n  (props: AnchorButtonProps, ref: React.ForwardedRef<HTMLAnchorElement>) => {\n    const {children, icon, intent, outlined, rightIcon, ...rest} = props;\n    return (\n      <StyledButton\n        {...rest}\n        as={Link}\n        $fillColor={intentToFillColor(intent, outlined)}\n        $strokeColor={intentToStrokeColor(intent, outlined)}\n        $textColor={intentToTextColor(intent, outlined)}\n        ref={ref}\n      >\n        {icon || null}\n        {children ? <StyledButtonText>{children}</StyledButtonText> : null}\n        {rightIcon || null}\n      </StyledButton>\n    );\n  },\n);\n\nAnchorButton.displayName = 'AnchorButton';\n","// eslint-disable-next-line no-restricted-imports\nimport {\n  Box,\n  Colors,\n  CommonMenuItemProps,\n  IconWrapper,\n  iconWithColor,\n  MenuItem,\n} from '@dagster-io/ui-components';\nimport * as React from 'react';\nimport {Link, LinkProps} from 'react-router-dom';\nimport styled from 'styled-components';\n\ninterface MenuLinkProps\n  extends CommonMenuItemProps,\n    Omit<React.ComponentProps<typeof MenuItem>, 'icon' | 'onClick' | 'onFocus' | 'target'>,\n    LinkProps {}\n\n/**\n * If you want to use a menu item as a link, use `MenuLink` and provide a `to` prop.\n */\nexport const MenuLink: React.FC<MenuLinkProps> = (props) => {\n  const {icon, intent, text, disabled, ...rest} = props;\n\n  if (disabled) {\n    return <MenuItem disabled icon={icon} intent={intent} text={text} />;\n  }\n  return (\n    <StyledMenuLink {...rest}>\n      <Box flex={{direction: 'row', gap: 8, alignItems: 'center'}}>\n        {iconWithColor(icon, intent)}\n        <div>{text}</div>\n      </Box>\n    </StyledMenuLink>\n  );\n};\n\nconst StyledMenuLink = styled(Link)`\n  text-decoration: none;\n\n  border-radius: 4px;\n  display: block;\n  line-height: 20px;\n  padding: 6px 8px 6px 12px;\n  transition:\n    background-color 50ms,\n    box-shadow 150ms;\n  align-items: flex-start;\n  user-select: none;\n\n  /**\n   * Use margin instead of align-items: center because the contents of the menu item may wrap \n   * in unusual circumstances.\n   */\n  ${IconWrapper} {\n    margin-top: 2px;\n  }\n\n  ${IconWrapper}:first-child {\n    margin-left: -4px;\n  }\n\n  &&&:link,\n  &&&:visited,\n  &&&:hover,\n  &&&:active {\n    color: ${Colors.Gray900};\n    text-decoration: none;\n  }\n\n  &&&:hover {\n    background: ${Colors.Gray100};\n  }\n`;\n","import {Box} from '@dagster-io/ui-components';\nimport {useVirtualizer} from '@tanstack/react-virtual';\nimport * as React from 'react';\n\nimport {Container, Inner, Row} from './VirtualizedTable';\n\ninterface Props<T> {\n  items: T[];\n  renderItem: (item: T) => React.ReactNode;\n}\n\nexport function VirtualizedItemListForDialog<A>({items, renderItem}: Props<A>) {\n  const container = React.useRef<HTMLDivElement | null>(null);\n\n  const rowVirtualizer = useVirtualizer({\n    count: items.length,\n    getScrollElement: () => container.current,\n    estimateSize: () => 40,\n    overscan: 10,\n  });\n\n  const totalHeight = rowVirtualizer.getTotalSize();\n  const virtualItems = rowVirtualizer.getVirtualItems();\n\n  return (\n    <Container ref={container} style={{padding: '8px 24px'}}>\n      <Inner $totalHeight={totalHeight}>\n        {virtualItems.map(({index, key, size, start}) => {\n          const assetKey = items[index]!;\n          return (\n            <Row $height={size} $start={start} key={key}>\n              <Box\n                style={{height: '100%'}}\n                flex={{direction: 'row', alignItems: 'center'}}\n                border={index < items.length - 1 ? 'bottom' : null}\n              >\n                {renderItem(assetKey)}\n              </Box>\n            </Row>\n          );\n        })}\n      </Inner>\n    </Container>\n  );\n}\n"],"names":["Page","styled","div","withConfig","PageHeader","props","title","tags","right","tabs","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__","jsxs","PageHeaderContainer","background","Colors","Gray50","padding","top","left","border","Box","flex","direction","justifyContent","bottom","alignItems","gap","wrap","__GLOBAL__","globalAssetGraphPathToString","path","str","explorerPathToString","_swc_helpers_object_spread_props__WEBPACK_IMPORTED_MODULE_2__","_","_swc_helpers_object_spread__WEBPACK_IMPORTED_MODULE_3__","pipelineName","replace","concat","globalAssetGraphPathFromString","pathName","explorerPathFromString","globalAssetGraphPathForAssetsAndDescendants","assetKeys","opsQuery","map","a","tokenForAssetKey","join","opNames","length","URL_MAX_LENGTH","reducer","state","action","copy","Set","Array","from","checkedIds","type","payload","checked","id","add","delete","lastCheckedId","allIds","indexOfLast","indexOf","indexOfChecked","_sort","_swc_helpers_sliced_to_array__WEBPACK_IMPORTED_MODULE_1__","sort","start","end","slice","forEach","initialState","useSelectionReducer","React","dispatch","onToggleFactory","values","shiftKey","onToggleAll","renderItemAssetKey","assetKey","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","Link","to","assetDetailsPathForKey","displayNameForAssetKey","renderItemAssetCheck","assetCheck","assetDetailsPathForAssetCheck","labelForAssetCheck","check","name","useShowMoreDialog","modalTitle","items","renderItem","showMore","setShowMore","dialog","Dialog","onClose","style","minWidth","maxWidth","maxHeight","isOpen","height","overflow","VirtualizedItemListForDialog","DialogFooter","topBorder","Button","autoFocus","onClick","undefined","AssetKeyTagCollection","param","useTags","_param_modalTitle","span","marginBottom","TagActionsPopover","data","key","value","actions","label","view","lineageScope","Tag","intent","interactive","icon","Icon","color","Gray400","size","ButtonLink","display","AssetCheckTagCollection","assetChecks","refineToError","deletePipelineRun","__typename","initializeState","frozenRuns","step","deletion","completed","errors","deletionDialogReducer","prevState","_swc_helpers_object_spread_props__WEBPACK_IMPORTED_MODULE_4__","_swc_helpers_object_spread__WEBPACK_IMPORTED_MODULE_5__","deletion1","_swc_helpers_define_property__WEBPACK_IMPORTED_MODULE_6__","error","DeletionDialog","onComplete","onTerminateInstead","selectedRuns","current","runIDs","Object","keys","count","terminatableCount","filter","destroy","useMutation","DELETE_MUTATION","mutate","_swc_helpers_async_to_generator__WEBPACK_IMPORTED_MODULE_9__","runList","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","runId","next","done","variables","_state","sent","err","return","canQuicklyClose","canEscapeKeyClose","canOutsideClickClose","DialogBody","Group","spacing","progressContent","Fragment","strong","ProgressBar","Math","max","animate","NavigationBlock","message","completionContent","errorCount","successCount","Green500","Yellow500","ul","li","Mono","buttons","disabled","ProductTourPosition","TOP_LEFT","TOP_CENTER","TOP_RIGHT","BOTTOM_LEFT","BOTTOM_CENTER","BOTTOM_RIGHT","ProductTour","description","position","children","img","video","object","width","media","jsx_runtime","src","borderRadius","autoPlay","loop","muted","actionsJsx","ActionsContainer","margin","dismiss","Popover","placement","modifiers","arrow","enabled","preventOverflow","minimal","content","ProductTourContainer","_param_width","Subheading","fontSize","Gray900","White","launchPipelineReexecution","errorText","reexecution","reexecutionDialogReducer","_object_spread_props","_object_spread","reexecution1","_define_property","ReexecutionDialog","reexecutionStrategy","reexecute","LAUNCH_PIPELINE_REEXECUTION_MUTATION","_async_to_generator","reexecutionParams","parentRunId","strategy","ReexecutionStrategy","ALL_STEPS","RunActionsMenu","run","onAddTag","additionalActionsForRun","refetch","RunsQueryRefetchContext","visibleDialog","setVisibleDialog","rootServerURI","AppContext","copyConfig","useCopyToClipboard","useJobReexecution","onCompleted","useLazyQuery","PIPELINE_ENVIRONMENT_QUERY","loadEnv","called","loading","closeDialogs","pipelineRun","pipelineRunOrError","runConfigYaml","repoMatch","useRepositoryForRunWithParentSnapshot","jobError","useJobAvailabilityErrorForRun","parentPipelineSnapshotId","isFinished","doneStatuses","has","status","isJob","isThisThingAJob","match","infoReady","reexecutionDisabledState","hasReExecutePermission","tooltip","DEFAULT_DISABLED_REASON","JoinedButtons","AnchorButton","Menu","MenuItem","tagName","text","horizontal","SlashShortcut","pipelineSnapshotId","LinkNoUnderline","getPipelineSnapshotLink","MenuDivider","Tooltip","OPEN_LAUNCHPAD_UNKNOWN","NO_LAUNCH_PERMISSION_MESSAGE","targetTagName","MenuLink","workspacePathFromRunDetails","repositoryName","repository","repositoryLocationName","repositoryLocation","canShow","hasTerminatePermission","MenuExternalLink","download","href","hasDeletePermission","onOpening","TerminationDialog","canTerminate","RunTags","mode","StyledRawCodeMirror","options","readOnly","lineNumbers","showSharedToaster","RunBulkActionsMenu","selected","clearSelection","canTerminateAny","some","canDeleteAny","canReexecuteAny","terminatableRuns","r","terminateableIDs","terminateableMap","reduce","accum","deleteableIDs","deletionMap","reexecuteFromFailureRuns","failedStatuses","reexecuteFromFailureMap","reexecutableRuns","reexecutableMap","rightIcon","FROM_FAILURE","gql","Gray100","Gray500","RunCreatedByCell","repoAddress","RunCreatedByTag","UserDisplay","useLaunchPadHooks","user","find","tag","DagsterTag","User","email","scheduleTag","ScheduleName","scheduleName","tagContent","workspacePathFromAddress","sensorTag","SensorName","sensorName","Automaterialize","CreatedBy","AutoObserve","RunTable","runs","highlightedIds","actionBarComponents","belowActionBarComponents","hideCreatedBy","emptyState","canTerminateOrDeleteAny","selectedFragments","ActionBar","grow","Table","thead","tr","th","paddingTop","paddingBottom","Checkbox","indeterminate","onChange","e","target","HTMLInputElement","TargetHeader","additionalColumnHeaders","tbody","RunRow","canTerminateOrDelete","additionalColumns","additionalColumnsForRow","onToggleChecked","isHighlighted","includes","anyFilter","vertical","NonIdealState","RUN_TAGS_FRAGMENT","RUN_TABLE_RUN_FRAGMENT","RUN_TIME_FRAGMENT","repo","useRepositoryForRunWithoutSnapshot","pipelinesAndJobs","pipelines","pipelineOrJob","repoAddressGuess","buildRepoAddress","useStateWithStorage","isArray","pinnedSystemTags","setPinnedSystemTags","unpinnedTags","setUnpinnedTags","allTagsWithPinned","allTags","_to_consumable_array","push","pinned","isUnpinnedByDefaultSystemTag","isReexecution","ParentRunId","targetBackfill","Backfill","showRunTags","setShowRunTags","isHovered","setIsHovered","tagsToShow","tagKeys","link","assetSelection","runsPathWithFilters","token","onToggleTagPin","tagKey","toggleTag","Row","highlighted","onMouseEnter","onMouseLeave","td","nativeEvent","MouseEvent","getModifierState","titleForRun","RunTime","isHiddenAssetGroupJob","assetCheckSelection","assetKeysForRun","PipelineReference","showIcon","pipelineHrefContext","workspacePipelinePath","repoName","repoLocation","workspacePipelinePathGuessRepo","Blue500","RunTagsWrapper","Caption","Gray700","ShortcutHandler","onShortcut","shortcutLabel","shortcutFilter","code","RunStatusTagWithStats","RunStateSummary","startsWith","Namespace","Partition","tagsArr","hideTabPinningNux","setHideTabPinningNux","priorityTags","priorityTagsSet","renamedTags","SolidSelection","OpSelection","copyAction","_swc_helpers_async_to_generator__WEBPACK_IMPORTED_MODULE_7__","addToFilterAction","originalKey","actionsForTag","list","item","displayedTags","priority","others","copiedTags","hasOwnProperty","__ASSET_JOB_PREFIX","PartitionSet","StepSelection","_swc_helpers_to_consumable_array__WEBPACK_IMPORTED_MODULE_9__","b","aIndex","modeTag","RunTag","ref","outlined","rest","StyledButton","as","$fillColor","intentToFillColor","$strokeColor","intentToStrokeColor","$textColor","intentToTextColor","StyledButtonText","displayName","StyledMenuLink","iconWithColor","IconWrapper","container","rowVirtualizer","useVirtualizer","getScrollElement","estimateSize","overscan","totalHeight","getTotalSize","virtualItems","getVirtualItems","Container","Inner","$totalHeight","index","$height","$start"],"sourceRoot":""}